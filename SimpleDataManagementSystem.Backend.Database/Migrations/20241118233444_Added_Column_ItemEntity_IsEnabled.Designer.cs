// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleDataManagementSystem.Backend.Database;

#nullable disable

namespace SimpleDataManagementSystem.Backend.Database.Migrations
{
    [DbContext(typeof(SimpleDataManagementSystemDbContext))]
    [Migration("20241118233444_Added_Column_ItemEntity_IsEnabled")]
    partial class Added_Column_ItemEntity_IsEnabled
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SimpleDataManagementSystem.Backend.Database.Entities.CategoryEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("ID")
                        .HasName("PK_Categories_ID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UQ_Categories_Name");

                    b.ToTable("Categories", "dbo");
                });

            modelBuilder.Entity("SimpleDataManagementSystem.Backend.Database.Entities.ItemEntity", b =>
                {
                    b.Property<string>("Nazivproizvoda")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar");

                    b.Property<decimal>("Cijena")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Datumakcije")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar");

                    b.Property<bool>("IsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int?>("Kategorija")
                        .HasColumnType("int");

                    b.Property<string>("Nazivretailera")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RetailerID")
                        .HasColumnType("int");

                    b.Property<string>("URLdoslike")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Nazivproizvoda")
                        .HasName("PK_Items_Nazivproizvoda");

                    b.HasIndex("Kategorija");

                    b.HasIndex("RetailerID");

                    b.ToTable("Items", "dbo");
                });

            modelBuilder.Entity("SimpleDataManagementSystem.Backend.Database.Entities.RetailerEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("LogoImageUrl")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("ID")
                        .HasName("PK_Retailers_ID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UQ_Retailers_Name");

                    b.ToTable("Retailers", "dbo");
                });

            modelBuilder.Entity("SimpleDataManagementSystem.Backend.Database.Entities.RoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedUTC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id")
                        .HasName("PK_Roles_Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UQ_Roles_Name");

                    b.ToTable("Roles", "dbo");
                });

            modelBuilder.Entity("SimpleDataManagementSystem.Backend.Database.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedUTC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsPasswordChangeRequired")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id")
                        .HasName("PK_Users_Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("UQ_Users_Username");

                    b.ToTable("Users", "dbo");
                });

            modelBuilder.Entity("SimpleDataManagementSystem.Backend.Database.Entities.ItemEntity", b =>
                {
                    b.HasOne("SimpleDataManagementSystem.Backend.Database.Entities.CategoryEntity", "Category")
                        .WithMany("Items")
                        .HasForeignKey("Kategorija")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("SimpleDataManagementSystem.Backend.Database.Entities.RetailerEntity", "Retailer")
                        .WithMany("Items")
                        .HasForeignKey("RetailerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Retailer");
                });

            modelBuilder.Entity("SimpleDataManagementSystem.Backend.Database.Entities.UserEntity", b =>
                {
                    b.HasOne("SimpleDataManagementSystem.Backend.Database.Entities.RoleEntity", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SimpleDataManagementSystem.Backend.Database.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("SimpleDataManagementSystem.Backend.Database.Entities.RetailerEntity", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("SimpleDataManagementSystem.Backend.Database.Entities.RoleEntity", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
