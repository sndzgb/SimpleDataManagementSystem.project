@page "/Users/Create"

@model SimpleDataManagementSystem.Frontend.Web.Razor.Pages.CreateUserModel

@using SimpleDataManagementSystem.Frontend.Web.Razor.Pages.ViewComponents
@using SimpleDataManagementSystem.Frontend.Web.Razor.ViewModels.Read
@using Microsoft.AspNetCore.Mvc.ModelBinding

@{
    ViewData["Title"] = "Create new user";
}


<div class="header">
    <h1>Create new user</h1>
</div>


<br>


<div class="content-container">

    <!-- #region DisplayError -->
    @await Component.InvokeAsync(typeof(DisplayErrorViewComponent), Model?.Error)
    <!-- #endregion DisplayError -->

    <!-- #region ModelStateValidationErrors -->
    @await Component.InvokeAsync(typeof(InvalidModelStateViewComponent), ModelState)
    <!-- #endregion ModelStateValidationErrors -->

    <br>

    <form method="post">
        <div class="form-controls-container">
            <div class="form-controls">

                <div class="input-control single-per-line">
                    <div class="required">
                        <label>Username:</label>
                    </div>
                    <div>
                        <input type="text" name="username" value="@Model?.Model?.Username" />
                    </div>
                </div>

                <div class="input-control single-per-line">
                    <div class="required">
                        <label>Password:</label>
                    </div>
                    <div>
                        <input type="password" name="password" value="@Model?.Model?.Password" />
                    </div>
                </div>

                <div class="input-control single-per-line">
                    <div class="required">
                        <label>Role:</label>
                    </div>
                    <div>
                        <select name="roleId">
                            @if (Model?.AvailableRoles != null)
                            {
                                @foreach (var r in Model.AvailableRoles)
                                {
                                    <option value="@r.Id" selected="@(Model?.Model?.RoleId == r.Id)">@r.Name</option>
                                }
                            }
                        </select>
                    </div>
                </div>

            </div>

            <br>

            <div class="flex-justify-center">
                <button class="button-default" type="submit">
                    Create
                </button>
            </div>

        </div>
    </form>
</div>

