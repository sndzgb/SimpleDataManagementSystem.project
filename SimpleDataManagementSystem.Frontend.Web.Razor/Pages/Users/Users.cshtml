@page "/Users"

@model UsersModel

@using SimpleDataManagementSystem.Frontend.Web.Razor.Helpers
@using SimpleDataManagementSystem.Frontend.Web.Razor.Pages.ViewComponents
@using SimpleDataManagementSystem.Frontend.Web.Razor.ViewModels.Read
@using System.Security.Claims
@using SimpleDataManagementSystem.Shared.Common.Constants

@{
    ViewData["Title"] = "Users";
}


<div class="header">
    <h1>Users</h1>
</div>

<br>

<div class="menu">
    <div>
        @if (
                PermissionsHelper.IsInRole
                (
                    Roles.Admin,
                    User.Claims?.Where(x => x.Type == ClaimTypes.Role)?.FirstOrDefault()?.Value!
                )
        )
        {
            <a href="/Users/Create"><button class="button-default" type="button">Create</button></a>
        }
    </div>

    <div class="spacer">
    </div>

    @* <div style="display: flex; flex-direction: row;">
        <input style="outline: none; flex-grow: 2; border: none; border-bottom: 1px solid gainsboro;" />
        <button type="button" style="border: none; border-bottom: 1px solid gainsboro; background-color: white;">
            <i class="fa-solid fa-magnifying-glass"></i>
        </button>
    </div> *@
</div>

<br />

<div class="table-default">
    <table style="table-layout: fixed; width: 100%;">
        <thead>
            <tr>
                <th>ID</th>
                <th>Username</th>
                <th>Role name</th>
                <th>Password change required</th>
                @if (
                        PermissionsHelper.IsInRole
                        (
                            Roles.Admin,
                            User.Claims?.Where(x => x.Type == ClaimTypes.Role)?.FirstOrDefault()?.Value!
                        )
                )
                {
                    <th>Management</th>
                }
            </tr>
        </thead>
        <tbody>
            @if (Model.Users.Users != null)
            {
                @foreach (var u in Model!.Users!.Users)
                {
                    <tr style="max-height: 70px; height:70px;">
                        <td>@u.ID</td>
                        <td>@u.Username</td>
                        <td>@u.RoleName</td>
                        <td class="@(u.IsPasswordChangeRequired ? "text-danger" : "")">
                            @(u.IsPasswordChangeRequired ? "Yes" : "No")
                        </td>
                        @if (
                                PermissionsHelper.IsInRole(
                                    Roles.Admin,
                                    User.Claims?.Where(x => x.Type == ClaimTypes.Role)?.FirstOrDefault()?.Value!
                            )
                        )
                        {
                            <td class="options">
                                <a href="/Users/@(u.ID)/Details">
                                    <i class="fa-solid fa-circle-info"></i>
                                </a>
                                <span>&nbsp;</span>
                                <span>&nbsp;</span>
                                <a href="/Users/@(u.ID)/Edit">
                                    <i class="fa-solid fa-pen"></i>
                                </a>
                                <span>&nbsp;</span>
                                <span>&nbsp;</span>
                                <a href="/Users/@(u.ID)/Delete">
                                    <i class="fa-solid fa-trash"></i>
                                </a>
                            </td>
                        }
                    </tr>
                }
            }
        </tbody>
    </table>

    @if ((Model == null) || (Model?.Users?.Users?.Count == 0) || (Model?.Users == null))
    {
        <div class="no-data">
            No data to show.
        </div>
    }
</div>


<!-- #region Pagination -->
@await Component.InvokeAsync(typeof(PagerViewComponent), Model?.Users?.PageInfo)
<!-- #endregion Pagination -->

