@page "/Items/Create"

@using Microsoft.AspNetCore.Mvc.ModelBinding
@using SimpleDataManagementSystem.Frontend.Web.Razor.Pages.ViewComponents

@model SimpleDataManagementSystem.Frontend.Web.Razor.Pages.Items.CreateItemModel

@using Microsoft.Extensions.Localization
@inject IStringLocalizer<CreateItemModel> loc

@{
    ViewData["Title"] = loc["Create new item"];
}

<div class="header">
    <h1>@loc["Create new item"]</h1>
</div>


<br>


<div class="content-container">
    
    <!-- #region DisplayError -->
    @await Component.InvokeAsync(typeof(DisplayErrorViewComponent), Model?.Error)
    <!-- #endregion DisplayError -->

    <!-- #region ModelStateValidationErrors -->
    @await Component.InvokeAsync(typeof(InvalidModelStateViewComponent), ModelState)
    <!-- #endregion ModelStateValidationErrors -->

    <br>

    <form method="post" enctype="multipart/form-data">
        <div class="form-controls-container">
            <div class="form-controls">
                <div class="port-side">

                    <div class="input-control">
                        <div class="required">
                            <label>
                                <label for="nazivproizvoda">@loc["Naziv proizvoda"]:</label>
                            </label>
                        </div>
                    </div>
                    <div>
                        <input name="nazivproizvoda" type="text" id="nazivproizvoda" value="@Model?.Model?.Nazivproizvoda" />
                        @* <input name="nazivproizvoda" type="text" id="nazivproizvoda" value="@Model?.NewItem?.Nazivproizvoda" /> *@
                    </div>

                    <br>

                    <div class="input-control">
                        <div>
                            <label for="opis">@loc["Opis"]:</label>
                        </div>
                        <div>
                            <textarea name="opis" rows="2" id="opis" spellcheck="false">@Model?.Model?.Opis</textarea>
                        </div>
                    </div>

                    <br>

                    <div class="input-control">
                        <div>
                            <label for="datumakcije">@loc["Datum akcije"]:</label>
                        </div>
                        <div>
                            <input name="datumakcije" type="text" id="datumakcije" value="@Model?.Model?.Datumakcije" />
                        </div>
                    </div>

                    <br>
                    
                    <div class="input-control">
                        <div>
                            <label>@loc["Enabled"]:</label>
                        </div>
                        <div>
                            <input name="isEnabled"
                                   type="checkbox"
                                   id="isEnabled"
                                   value="true"
                                   checked 
                            />
                        </div>
                    </div>

                    <br>

                    <div class="input-control">
                        <div class="required">
                            <label for="cijena">@loc["Cijena"]:</label>
                        </div>
                        <div>
                            <input name="cijena" type="number" id="cijena" value="@Model?.Model?.Cijena" />
                        </div>
                    </div>

                    <br>

                    <div class="input-control">
                        <div class="required">
                            <label for="retailer">@loc["Retailer"]:</label>
                        </div>
                        <div>
                            <select id="retailer" name="retailerId">
                                @if (Model?.AvailableRetailers?.Retailers != null)
                                {
                                    @foreach (var r in Model.AvailableRetailers.Retailers)
                                    {
                                        <option value="@r.Id" selected="@(Model?.Model?.RetailerId == r.Id)">@r.Name</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>

                    <br>

                    <div class="input-control">
                        <div class="required">
                            <label for="kategorija">@loc["Category"]:</label>
                        </div>
                        <div>
                            <select *ngLoading="categories" id="kategorija" name="kategorija">
                                @if (Model?.AvailableCategories?.Categories != null)
                                {
                                    @foreach (var c in Model.AvailableCategories.Categories)
                                    {
                                        <option value="@c.Id" selected="@(Model?.Model?.Kategorija == c.Id)">@c.Name</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>

                </div>

                <div class="starboard-side">
                    <div class="image-control">
                        <div>
                            <label>@loc["Thumbnail"]:</label>
                        </div>
                        <div id="thumbnail">
                            <div style="position: relative">
                                <div class="thumbnail-preview-container">
                                    <img height="300"
                                         width="300"
                                         id="thumbnailPreview"
                                         src="@(Model?.Model?.URLdoslike == null ? "/Resources/image_not_available.png" : Model.Model.URLdoslike)" />
                                </div>

                                <div class="thumbnail-preview-delete-control element-invisible-no-space"
                                     style="position:absolute; top:5px; right: 5px;">
                                    <button type="button" style="border:none;
                                                cursor:default;
                                                background-color: transparent;
                                                background-repeat: no-repeat;
                                                border: none;
                                                overflow: hidden;
                                                outline: none;">
                                        <i onclick="removePreview(event)" style="cursor: pointer;" class="fa-solid fa-circle-xmark fa-lg">
                                        </i>
                                    </button>
                                </div>
                            </div>

                            <div class="thumbnail-upload-control">
                                <div>
                                    <label id="thumbnailAddOrUpdate">@loc["Add new thumbnail"]:</label>
                                </div>
                                <div>
                                    <input id="thumbnailUpload" value="@Model?.Model?.URLdoslike" type="file" name="URLdoslike" onchange="loadThumbnailPreview(event)" />
                                </div>
                            </div>
                        </div>

                        <br />

                    </div>
                </div>
            </div>

            <br>

            <div class="flex-justify-center">
                <button class="button-default" type="submit">
                    @loc["Create"]
                </button>
            </div>

        </div>
    </form>
</div>


@section scripts {
    
    <script>
        function removePreview(event) {
            var img = document.getElementById('thumbnailPreview');
            img.removeAttribute('src');
            img.src = "/Resources/image_not_available.png";

            var input = document.getElementById('thumbnailUpload').value = "";

            // TODO toggle this control (function)
            var thumbnailUploadControl = document.getElementsByClassName('thumbnail-upload-control')[0];
            thumbnailUploadControl.classList.remove('element-invisible-no-space');
            
            // TODO toggle this control (function)
            var thumbnailPreviewDeleteControl = document.getElementsByClassName('thumbnail-preview-delete-control')[0];
            thumbnailPreviewDeleteControl.classList.add('element-invisible-no-space');
        }
    </script>

    <script>
        var loadThumbnailPreview = function (event) {
            // TODO toggle this control (function)
            var thumbnailUploadControl = document.getElementsByClassName('thumbnail-upload-control')[0];
            thumbnailUploadControl.classList.add('element-invisible-no-space');
            
            // TODO toggle this control (function)
            var thumbnailPreviewDeleteControl = document.getElementsByClassName('thumbnail-preview-delete-control')[0];
            thumbnailPreviewDeleteControl.classList.remove('element-invisible-no-space');
            
            var output = document.getElementById('thumbnailPreview');
            output.src = URL.createObjectURL(event.target.files[0]);
            output.onload = function () {
                URL.revokeObjectURL(output.src) // free memory
            }
        };
    </script>
}