@page "/Items/{ItemId}/Edit"

@using SimpleDataManagementSystem.Frontend.Web.Razor.Pages.ViewComponents
@using SimpleDataManagementSystem.Frontend.Web.Razor.ViewModels.Write
@using SimpleDataManagementSystem.Frontend.Web.Razor.ViewModels.Read

@model SimpleDataManagementSystem.Frontend.Web.Razor.Pages.Items.EditItemModel

@{
    ViewData["Title"] = "Edit item - '" + (Model?.Item?.Nazivproizvoda ?? "-") + "'";
}

<div class="header">
    <h1>Edit item - '<b>@Model?.Item?.Nazivproizvoda</b>'</h1>
</div>


<br>


<div class="content-container">

    <!-- #region DisplayError -->
    @await Component.InvokeAsync(typeof(DisplayErrorViewComponent), Model?.Error)
    <!-- #endregion DisplayError -->

    <!-- #region ModelStateValidationErrors -->
    @await Component.InvokeAsync(typeof(InvalidModelStateViewComponent), ModelState)
    <!-- #endregion ModelStateValidationErrors -->

    <br>

    @if (Model?.Item != null)
    {
        <form method="post" enctype="multipart/form-data">
            <div class="form-controls-container">
                <div class="form-controls">

                    <div class="port-side">
                        <div class="input-control single-per-line">
                            <div>
                                <label for="opis">Opis:</label>
                            </div>
                            <div>
                                <textarea name="opis"
                                          style="display:block;"
                                          type="text"
                                          id="opis"
                                          spellcheck="false">@Model.Item.Opis</textarea>
                            </div>
                        </div>

                        <br>

                        <div class="input-control single-per-line">
                            <div>
                                <label for="datumakcije">Datum akcije:</label>
                            </div>
                            <div>
                                <input name="datumakcije" type="text" id="datumakcije" value="@Model.Item.Datumakcije" />
                            </div>
                        </div>
                        
                        <br>

                        <div class="input-control single-per-line">
                            <div class="required">
                                <label for="cijena">Cijena:</label>
                            </div>
                            <div>
                                <input 
                                    name="cijena" type="number" id="cijena" 
                                    value="@Model.Item.Cijena.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)" 
                                />
                            </div>
                        </div>

                        <br>

                        <div class="input-control single-per-line">
                            <div class="required">
                                <label for="retailer">Retailer:</label>
                            </div>
                            <div>
                                <select id="retailer" name="retailerId">
                                    @foreach (var r in Model.AvailableRetailers.Retailers)
                                    {
                                        <option value="@r.ID" selected="@(r.ID == Model.Item.RetailerId)">@r.Name</option>
                                    }
                                </select>
                            </div>
                        </div>

                        <br>

                        <div class="input-control single-per-line">
                            <div class="required">
                                <label for="kategorija">Category:</label>
                            </div>
                            <div>
                                <select id="kategorija" name="kategorija">
                                    @foreach (var c in Model.AvailableCategories.Categories)
                                    {
                                        <option value="@c.ID" selected="@(c.ID == Model.Item.Kategorija)">@c.Name</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="starboard-side">
                        <div class="image-control">
                            <div>
                                <label>Thumbnail:</label>
                            </div>
                            <div id="thumbnail">
                                <div style="position: relative">
                                    <div class="thumbnail-preview-container">
                                        <img 
                                            height="300" 
                                            width="300" 
                                            id="thumbnailPreview"
                                            src="@(Model.Item.URLdoslikeUri == null ? 
                                                        "/Resources/image_not_available.png" 
                                                        : 
                                                        Model.Item.URLdoslikeUri)" />
                                    </div>

                                    @* visibility: @(Model.Item.URLdoslikeUri ?? "hidden;") *@
                                    <div class="thumbnail-preview-delete-control @(Model.Item.URLdoslikeUri ?? " element-invisible-no-space ")"
                                         style="position:absolute; top:5px; right: 5px;">
                                        <button type="button" style="border:none;
                                                cursor:default;
                                                background-color: transparent;
                                                background-repeat: no-repeat;
                                                border: none;
                                                overflow: hidden;
                                                outline: none;">
                                            <i @(Model.Item.URLdoslikeUri != null ? 
                                                    $"onclick=deleteImage('{Model.ItemId}')" 
                                                    :
                                                    $"onclick=removePreview(event)")
                                                style="cursor: pointer;" 
                                                class="fa-solid fa-circle-xmark fa-lg"
                                            >
                                            </i>
                                        </button>
                                    </div>
                                </div>

                                @* style="visibility: @(Model.Item.URLdoslikeUri != null ? "hidden" : "")" *@
                                <div class="thumbnail-upload-control @(Model.Item.URLdoslikeUri != null ? " element-invisible-no-space " : "")">
                                    <div>
                                        <label id="thumbnailAddOrUpdate">Add new thumbnail:</label>
                                    </div>
                                    <div>
                                        <input id="thumbnailUpload" type="file" name="URLdoslike" onchange="loadThumbnailPreview(event)" />
                                    </div>
                                </div>
                            </div>

                            <br />

                        </div>
                    </div>

                </div>

                <br>

                <div class="flex-justify-center">
                    <button class="button-default" type="submit">
                        Edit
                    </button>
                </div>
            </div>
        </form>
    }
</div>


@section scripts {

    <script>
        function deleteImage(itemId) {
            var token = $('input[name="__RequestVerificationToken"]').val();

            var encUri = encodeURIComponent(itemId);

            // console.log(encUri);

            $.ajax({
                type: "POST",
                url: "/Items/" + encUri + "/Edit/?handler=DeleteImage",
                data: {
                    __RequestVerificationToken: token,
                },
                success: function (r) {
                    removePreview(null);
                    showSnackbar("Image deleted successfully", snackbarType.INFO);
                    location.reload();
                },
                error: function (xhr, status, error) {
                    // TODO display error
                    let response = JSON.parse(xhr.responseText);
                    showSnackbar(response.message, snackbarType.INFO);

                    console.log(xhr.responseText);
                    console.log(xhr.responseText.message);
                    console.log(status);
                    console.log(error);
                }
            });
        }
    </script>

    <script>
        function removePreview(event) {
            var img = document.getElementById('thumbnailPreview');
            img.removeAttribute('src');
            img.src = "/Resources/image_not_available.png";

            var input = document.getElementById('thumbnailUpload').value = "";

            // TODO toggle this control (function)
            var thumbnailUploadControl = document.getElementsByClassName('thumbnail-upload-control')[0];
            thumbnailUploadControl.classList.remove('element-invisible-no-space');

            // TODO toggle this control (function)
            var thumbnailPreviewDeleteControl = document.getElementsByClassName('thumbnail-preview-delete-control')[0];
            thumbnailPreviewDeleteControl.classList.add('element-invisible-no-space');
        }
    </script>

    @* TODO put in .JS *@
    <script>
        var loadThumbnailPreview = function (event) {
            
            // TODO toggle this control (function)
            var thumbnailUploadControl = document.getElementsByClassName('thumbnail-upload-control')[0];
            thumbnailUploadControl.classList.add('element-invisible-no-space');

            // TODO toggle this control (function)
            var thumbnailPreviewDeleteControl = document.getElementsByClassName('thumbnail-preview-delete-control')[0];
            thumbnailPreviewDeleteControl.classList.remove('element-invisible-no-space');

            var output = document.getElementById('thumbnailPreview');
            output.src = URL.createObjectURL(event.target.files[0]);
            output.onload = function() {
                URL.revokeObjectURL(output.src) // free memory
            }
        };
    </script>
}