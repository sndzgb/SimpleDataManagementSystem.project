@page "/Items"

@model SimpleDataManagementSystem.Frontend.Web.Razor.Pages.Items.ItemsModel

@using SimpleDataManagementSystem.Frontend.Web.Razor.Pages.ViewComponents
@using System.Web
@using System.Security.Claims
@using SimpleDataManagementSystem.Shared.Common.Constants

@{
    ViewData["Title"] = "Items";
}


<div class="header">
    <h1>Items</h1>
</div>


<br />


<div class="menu">
    <div>
        @if (
                PermissionsHelper.IsInRole
                (
                    Roles.Admin,
                    User.Claims?.Where(x => x.Type == ClaimTypes.Role)?.FirstOrDefault()?.Value!
                )
                ||
                PermissionsHelper.IsInRole
                (
                    Roles.Employee,
                    User.Claims?.Where(x => x.Type == ClaimTypes.Role)?.FirstOrDefault()?.Value!
                )
        )
        {
            <a href="/Items/Create"><button class="button-default" type="button">Create</button></a>
        }
    </div>

    <div class="spacer">
    </div>

    <div style="display: flex; flex-direction: row;">
        <form method="get" validatable asp-page="/Items/Search">
            <div>
                <input 
                    class="" 
                    form-field-required 
                    name="searchQuery"
                    data-validation-required-error-message="Search query is required."
                    placeholder="Enter a search query..."
                    style="outline: none; flex-grow: 2; border: none; border-bottom: 1px solid gainsboro;" 
                />
                <button type="submit" style="border: none; border-bottom: 1px solid gainsboro; background-color: white;">
                    <i class="fa-solid fa-magnifying-glass"></i>
                </button>
            </div>
            @* <div style="color:red;">
                <small>
                    Search query is required.
                </small>
            </div> *@
        </form>
    </div>
</div>


<br />


<div class="table-default">
    <table style="table-layout: fixed; width: 100%;">
        <thead>
            <tr>
                <th>Naziv proizvoda</th>
                <th>Opis</th>
                <th>Datum akcije</th>
                <th>Cijena</th>
                <th>Kategorija</th>
                <th>Thumbnail</th>
                @if (
                        PermissionsHelper.IsInRole
                        (
                            Roles.Admin,
                            User.Claims?.Where(x => x.Type == ClaimTypes.Role)?.FirstOrDefault()?.Value!
                        )
                        ||
                        PermissionsHelper.IsInRole
                        (
                            Roles.Employee,
                            User.Claims?.Where(x => x.Type == ClaimTypes.Role)?.FirstOrDefault()?.Value!
                        )
                )
                {
                    <th>Management</th>
                }
            </tr>
        </thead>
        <tbody>
            @if (Model?.Model?.Items != null)
            {
                @foreach (var item in Model.Model.Items)
                {
                    <tr style="max-height: 70px; height:70px; word-wrap: anywhere;">
                        <td>@(item.Nazivproizvoda ?? "-")</td>
                        <td>@(item.Opis ?? "-")</td>
                        <td>@(item.Datumakcije ?? "-")</td>
                        <td>@(item.Cijena.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture))</td>
                        <td>@(item.Kategorija)</td>

                        <td>
                            <img width="64" height="64" 
                                src="@(item.URLdoslikeUri != null ? item.URLdoslikeUri : "/resources/image_not_available.png")" 
                            />
                        </td>

                        @if (
                                PermissionsHelper.IsInRole
                                (
                                    Roles.Admin,
                                    User.Claims?.Where(x => x.Type == ClaimTypes.Role)?.FirstOrDefault()?.Value!
                                )
                                ||
                                PermissionsHelper.IsInRole
                                (
                                    Roles.Employee,
                                    User.Claims?.Where(x => x.Type == ClaimTypes.Role)?.FirstOrDefault()?.Value!
                                )
                        )
                        {
                            <td class="options">
                                <a href="/Items/@Uri.EscapeDataString(item.Nazivproizvoda!)/Details">
                                    <i class="fa-solid fa-circle-info"></i>
                                </a>
                                <span>&nbsp;</span>
                                <span>&nbsp;</span>
                                <a href="/Items/@Uri.EscapeDataString(item.Nazivproizvoda!)/Edit">
                                    <i class="fa-solid fa-pen"></i>
                                </a>
                                <span>&nbsp;</span>
                                <span>&nbsp;</span>
                                <a href="/Items/@Uri.EscapeDataString(item.Nazivproizvoda!)/Delete">
                                    <i class="fa-solid fa-trash"></i>
                                </a>
                            </td>
                        }
                    </tr>
                }
            }
        </tbody>
    </table>

    @if (Model?.Model?.Items?.Count == 0)
    {
        <div class="no-data">
            No data to show.
        </div>
    }

</div>

<!-- #region Pagination -->
@await Component.InvokeAsync(typeof(PagerViewComponent), Model?.Model?.PageInfo)
<!-- #endregion Pagination -->
