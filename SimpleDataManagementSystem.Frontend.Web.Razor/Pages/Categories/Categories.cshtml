@page "/Categories"
@using System.Security.Claims
@using SimpleDataManagementSystem.Frontend.Web.Razor.Pages.ViewComponents
@using SimpleDataManagementSystem.Shared.Common.Constants

@model SimpleDataManagementSystem.Frontend.Web.Razor.Pages.Categories.CategoriesModel

@{
    ViewData["Title"] = "Categories";
}

<div class="header">
    <h1>Categories</h1>
</div>


<br>


<div class="menu">
    <div>
        @if (
            PermissionsHelper.IsInRole
            (
                Roles.Admin,
                User.Claims?.Where(x => x.Type == ClaimTypes.Role)?.FirstOrDefault()?.Value!
            )
        ||
            PermissionsHelper.IsInRole
            (
                Roles.Employee,
                User.Claims?.Where(x => x.Type == ClaimTypes.Role)?.FirstOrDefault()?.Value!
            )
        )
        {
            <a href="/Categories/Create"><button class="button-default" type="button">Create</button></a>
        }
    </div>

    @* <div class="spacer">
    </div> *@

    @* <div style="display: flex; flex-direction: row;">
        <form method="get" asp-page="/Items/Search">
            <input name="searchQuery"
                   style="outline: none; flex-grow: 2; border: none; border-bottom: 1px solid gainsboro;" />
            <button type="submit" style="border: none; border-bottom: 1px solid gainsboro; background-color: white;">
                <i class="fa-solid fa-magnifying-glass"></i>
            </button>
        </form>
    </div> *@
</div>


<br>

<div class="table-default">
    <table style="table-layout: fixed; width: 100%;">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                @if (
                    PermissionsHelper.IsInRole
                    (
                        Roles.Admin,
                        User.Claims?.Where(x => x.Type == ClaimTypes.Role)?.FirstOrDefault()?.Value!
                    )
                    ||
                    PermissionsHelper.IsInRole
                    (
                        Roles.Employee,
                        User.Claims?.Where(x => x.Type == ClaimTypes.Role)?.FirstOrDefault()?.Value!
                    )
                )
                {
                    <th>Management</th>
                }
            </tr>
        </thead>
        <tbody>
            @if (Model?.Model?.Categories != null)
            {
                @foreach (var c in Model.Model.Categories)
                {
                    <tr style="max-height: 70px; height:70px;" *ngFor="let c of categories?.categories">
                        <td>@c.Id</td>
                        <td>@c.Name</td>
                        @if (
                            PermissionsHelper.IsInRole
                            (
                                Roles.Admin,
                                User.Claims?.Where(x => x.Type == ClaimTypes.Role)?.FirstOrDefault()?.Value!
                            )
                            ||
                            PermissionsHelper.IsInRole
                            (
                                Roles.Employee,
                                User.Claims?.Where(x => x.Type == ClaimTypes.Role)?.FirstOrDefault()?.Value!
                            )
                        )
                        {
                            <td class="options">
                                <a href="/Categories/@c.Id/Details">
                                    <i class="fa-solid fa-circle-info"></i>
                                </a>
                                <span>&nbsp;</span>
                                <span>&nbsp;</span>
                                <a href="/Categories/@c.Id/Edit">
                                    <i class="fa-solid fa-pen"></i>
                                </a>
                                <span>&nbsp;</span>
                                <span>&nbsp;</span>
                                <a href="/Categories/@c.Id/Delete">
                                    <i class="fa-solid fa-trash"></i>
                                </a>
                            </td>
                        }
                    </tr>
                }
            }
        </tbody>
    </table>

    @if (Model?.Model?.Categories?.Count == 0)
    {
        <div class="no-data">
            No data to show.
        </div>
    }
</div>

<!-- #region Pagination -->
@await Component.InvokeAsync(typeof(PagerViewComponent), Model?.Model?.PageInfo)
<!-- #endregion Pagination -->
