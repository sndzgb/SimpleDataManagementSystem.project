@page "/Retailers/{RetailerId:int}/Edit"

@model EditRetailerModel

@using SimpleDataManagementSystem.Frontend.Web.Razor.Pages.ViewComponents

@{
    ViewData["Title"] = "Edit retailer - '" + (Model?.Retailer?.Name ?? "-") + "'";
}

<div class="header">
    <h1>Edit retailer - '<b>@Model?.Retailer?.Name</b>'</h1>
</div>


<br>


<div class="content-container">
    
    <!-- #region DisplayError -->
    @await Component.InvokeAsync(typeof(DisplayErrorViewComponent), Model?.Error)
    <!-- #endregion DisplayError -->

    <!-- #region ModelStateValidationErrors -->
    @await Component.InvokeAsync(typeof(InvalidModelStateViewComponent), ModelState)
    <!-- #endregion ModelStateValidationErrors -->

    <br>

    @if (Model?.Retailer != null)
    {
        <form method="post" enctype="multipart/form-data">
            <div class="form-controls-container">
                <div class="form-controls">

                    <div class="port-side">
                        <div class="input-control single-per-line">
                            <div class="required">
                                <label>Name:</label>
                            </div>
                            <div>
                                <input type="text" name="name" value="@Model.Retailer.Name" />
                            </div>
                        </div>

                        <br>

                        <div class="input-control">
                            <div class="required">
                                <label>Priority:</label>
                            </div>
                            <div>
                                <input type="number" name="priority" value="@Model.Retailer.Priority" />
                            </div>
                        </div>

                    </div>

                    <div class="starboard-side">
                        <div class="image-control">
                            <div>
                                <label>Thumbnail:</label>
                            </div>
                            <div id="thumbnail">
                                <div style="position: relative">
                                    <div class="thumbnail-preview-container">
                                        <img height="300"
                                             width="300"
                                             id="thumbnailPreview"
                                             src="@(Model.Retailer.LogoImageUrl == null ?
                                                        "/Resources/image_not_available.png"
                                                        :
                                                        Model.Retailer.LogoImageUrl)" />
                                    </div>

                                    <div class="thumbnail-preview-delete-control @(Model.Retailer.LogoImageUrl ?? " element-invisible-no-space ")"
                                         style="position:absolute; top:5px; right: 5px;">
                                        <button type="button" style="border:none;
                                                cursor:default;
                                                background-color: transparent;
                                                background-repeat: no-repeat;
                                                border: none;
                                                overflow: hidden;
                                                outline: none;">
                                            <i @(Model.Retailer.LogoImageUrl != null ?
                                                $"onclick=deleteImage('{Model.Retailer.Id}')"
                                                :
                                                $"onclick=removePreview(event)")
                                               style="cursor: pointer;"
                                               class="fa-solid fa-circle-xmark fa-lg">
                                            </i>
                                        </button>
                                    </div>
                                </div>

                                @* style="visibility: @(Model.Item.URLdoslikeUri != null ? "hidden" : "")" *@
                                <div class="thumbnail-upload-control @(Model.Retailer.LogoImageUrl != null ? " element-invisible-no-space " : "")">
                                    <div>
                                        <label id="thumbnailAddOrUpdate">Add new thumbnail:</label>
                                    </div>
                                    <div>
                                        <input id="thumbnailUpload" type="file" name="logoImage" onchange="loadThumbnailPreview(event)" />
                                        @if (Model.Model.LogoImage != null)
                                        {
                                            <input name="deleteCurrentLogoImage" hidden value="false" />
                                        }
                                    </div>
                                </div>
                            </div>

                            <br />

                        </div>
                    </div>
                </div>

                <br>

                <div class="flex-justify-center">
                    <button class="button-default" type="submit">
                        Edit
                    </button>
                </div>
            </div>
        </form>
    }

</div>


@section scripts {

    <script>
        function deleteImage(retailerId) {
            var el = document.getElementsByName('deleteCurrentLogoImage')[0];
            el.value = true;

            removePreview(null);
        }
    </script>

    <script>
        function removePreview(event) {
            var img = document.getElementById('thumbnailPreview');
            img.removeAttribute('src');
            img.src = "/Resources/image_not_available.png";

            var input = document.getElementById('thumbnailUpload').value = "";

            // TODO toggle this control (function)
            var thumbnailUploadControl = document.getElementsByClassName('thumbnail-upload-control')[0];
            thumbnailUploadControl.classList.remove('element-invisible-no-space');
            
            // TODO toggle this control (function)
            var thumbnailPreviewDeleteControl = document.getElementsByClassName('thumbnail-preview-delete-control')[0];
            thumbnailPreviewDeleteControl.classList.add('element-invisible-no-space');
        }
    </script>

    @* TODO put in .JS *@
    <script>
        var loadThumbnailPreview = function (event) {
            // TODO toggle this control (function)
            var thumbnailUploadControl = document.getElementsByClassName('thumbnail-upload-control')[0];
            thumbnailUploadControl.classList.add('element-invisible-no-space');

            // TODO toggle this control (function)
            var thumbnailPreviewDeleteControl = document.getElementsByClassName('thumbnail-preview-delete-control')[0];
            thumbnailPreviewDeleteControl.classList.remove('element-invisible-no-space');
            
            var output = document.getElementById('thumbnailPreview');
            output.src = URL.createObjectURL(event.target.files[0]);
            output.onload = function () {
                URL.revokeObjectURL(output.src) // free memory
            }
        };
    </script>
}