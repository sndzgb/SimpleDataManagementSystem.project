@page "/Retailers"

@model SimpleDataManagementSystem.Frontend.Web.Razor.Pages.Retailers.RetailersModel

@using SimpleDataManagementSystem.Frontend.Web.Razor.Pages.ViewComponents
@using SimpleDataManagementSystem.Frontend.Web.Razor.ViewModels.Read
@using SimpleDataManagementSystem.Frontend.Web.Razor.ViewModels.Write
@using System.Security.Claims

@{
    ViewData["Title"] = "Retailers";
}

<h1>Retailers</h1>

<br />


@if (User?.Claims?.Where(x => x.Type == ClaimTypes.Role)?.FirstOrDefault()?.Value == "Admin"
    ||
    User?.Claims?.Where(x => x.Type == ClaimTypes.Role)?.FirstOrDefault()?.Value == "Employee"
    )
{
    <div>
        <a href="/Retailers/Create"><button>Create</button></a>
    </div>

    <hr />
}

<div>
    <table>
        <thead>
            <tr>
                <th>
                    Logo
                </th>
                <th>
                    Name
                </th>
                @if (User?.Claims?.Where(x => x.Type == ClaimTypes.Role)?.FirstOrDefault()?.Value == "Admin"
                    ||
                    User?.Claims?.Where(x => x.Type == ClaimTypes.Role)?.FirstOrDefault()?.Value == "Employee"
                    )
                {
                    <th>
                        Management
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            @if (Model.Retailers != null)
            {
                @foreach (var retailer in Model.Retailers.Retailers)
                {
                    <tr>
                        @if (string.IsNullOrEmpty(retailer.LogoImageUri))
                        {
                            <td>
                                <img height=64 width=64 src="/Resources/image_not_available.png" alt="image not available" />
                            </td>
                        }
                        else
                        {
                            <td>
                                <img height=64 width=64 src="@retailer.LogoImageUri" alt="@System.IO.Path.GetFileNameWithoutExtension(retailer.LogoImageUri)" />
                            </td>
                        }
                        <td>
                            @retailer.Name
                        </td>
                        @if (User?.Claims?.Where(x => x.Type == ClaimTypes.Role)?.FirstOrDefault()?.Value == "Admin"
                           ||
                            User?.Claims?.Where(x => x.Type == ClaimTypes.Role)?.FirstOrDefault()?.Value == "Employee"
                           )
                        {
                            <td>
                                <div class="options @retailer.ID">
                                    <a href="/Retailers/@retailer.ID/Edit"><button type="button">Edit</button></a>
                                    |
                                    <button class="delete" id="@retailer.ID">Delete</button>
                                </div>

                                <div class="confirm @retailer.ID" style="display:none;">
                                    Confirm:
                                    <button onclick="confirmDelete(@retailer.ID)">Yes</button>
                                    <button onclick="cancelDelete(@retailer.ID)">No</button>
                                </div>
                            </td>
                        }
                    </tr>
                }
            }
        </tbody>
    </table>
</div>


<!-- #region Pagination -->
@await Component.InvokeAsync(typeof(PagerViewComponent), Model.Retailers.PageInfo)
<!-- #endregion Pagination -->


@section scripts {
    <script>
        function confirmDelete(retailerId) {
            var retailer = { "retailerId": retailerId };

            var token = $('input[name="__RequestVerificationToken"]').val();

            $.ajax({
                type: "POST",
                url: "/Retailers/" + retailerId + "/Delete/?handler=DeleteRetailer",
                data: {
                    __RequestVerificationToken: token,
                },
                success: function (r) {
                    $(".confirm." + retailerId).closest("tr").remove();
                    showSnackbar("Retailer deleted successfully");
                },
                error: function (xhr, status, error) {
                    console.log(xhr.responseText);
                    console.log(status);
                    console.log(error);
                }
            });
        }

        function cancelDelete(userId) {
            $(".options." + userId).css("display", "inline-block");
            $(".confirm." + userId).css("display", "none");
        }

        $(document).ready(function () {
            $(".delete").click(function (e) {
                e.preventDefault();
                var retailerId = $(this).attr("id");

                var parent = $("#" + retailerId).parent();

                parent.hide();

                $(".confirm." + retailerId).css("display", "");
            });
        });
    </script>
}